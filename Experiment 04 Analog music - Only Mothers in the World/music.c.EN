**
* [Writing time]: March 5, 2014
* [Author]: Qingxiang Electronics: 03
* [Edition]: 1.0
* [Website]: http://www.qxmcu.com/
* [Taobao Store]: http://qxmcu.taobao.com/ (Direct Store) http://qx-mcu.taobao.com/ (Head Office)
* [Experimental platform]: QX-MCS51 microcontroller development board
* [External crystal oscillator]: 11.0592mhz
* [Main control chip]: STC89C52RC
* [Compilation Environment]: Keil Î¼Visio4
* [Program function]: Passive buzzer test-only mother in the world is good
* [Instructions]: Please connect J1 jumper cap before use
************************************************** ******************************** /

#include <reg52.h>
#define uchar unsigned char
sbit beep = P3 ^ 6; // Define buzzer output port
uchar timer0h, timer0l, time;

                         // Only mother is good in the world
code uchar sszymmh [] = {6,2,3,5,2,1,3,2,2,5,2,2,1,3,2,6,2,1,5,2,1,
                      6,2,4,3,2,2,5,2,1,6,2,1,5,2,2,3,2,2,1,2,1,
                      6,1,1,5,2,1,3,2,1,2,2,4,2,2,3,3,2,1,5,2,2,
                      5,2,1,6,2,1,3,2,2,2,2,2,1,2,4,5,2,3,3,2,1,
                      2,2,1,1,2,1,6,1,1,1,2,1,5,1,6,0,0,0
                                      };
                         // Scale frequency table high eight digits
code uchar FREQH [] = {0xF2,0xF3,0xF5,0xF5,0xF6,0xF7,0xF8,
                    0xF9,0xF9,0xFA, 0xFA, 0xFB, 0xFB, 0xFC, 0xFC, // 1,2,3,4,5,6,7,8, i
                    0xFC, 0xFD, 0xFD, 0xFD, 0xFD, 0xFE,
                    0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFF,};
                         // scale frequency table lower eight digits
code uchar FREQL [] = {0x42,0xC1,0x17,0xB6,0xD0,0xD1,0xB6,
                    0x21,0xE1,0x8C, 0xD8,0x68,0xE9,0x5B, 0x8F, // 1,2,3,4,5,6,7,8, i
                    0xEE, 0x44, 0x6B, 0xB4, 0xF4, 0x2D,
                    0x47,0x77,0xA2,0xB6,0xDA, 0xFA, 0x16,};
void delay (uchar t) // Delay function
{
        uchar t1;
        unsigned long t2;
        for (t1 = 0; t1 <t; t1 ++)
        {
                for (t2 = 0; t2 <8000; t2 ++);
        }
        TR0 = 0;
}
void song () // Music processing function
{
        TH0 = timer0h;
        TL0 = timer0l;
        TR0 = 1;
        delay (time);
}
/ ************************************************* *****************
                                        Main function
************************************************** **************** /
void main (void)
{
        uchar k, i;
        TMOD = 1; // Set CT0 timing working mode 1
        EA = 1;
        ET0 = 1; // IE = 0x82 // CPU open interrupt, CT0 open interrupt
        while (1)
        {
                i = 0;
                while (i <100) // The length of the music array, start again after singing
                {
                        k = sszymmh [i] + 7 * sszymmh [i + 1] -1;
                        timer0h = FREQH [k];
                        timer0l = FREQL [k];
                        time = sszymmh [i + 2];
                        i = i + 3;
                        song ();
                }
        }
}
void t0int () interrupt 1 // Timer interrupt function
{
        TR0 = 0;
        beep =! beep;
        TH0 = timer0h;
        TL0 = timer0l;
        TR0 = 1;
}
