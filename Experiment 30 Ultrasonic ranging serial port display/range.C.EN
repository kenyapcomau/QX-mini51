/ ************************************************* ********************************
* [Writing time]: March 5, 2014
* [Author]: Qingxiang Electronics: 03
* [Edition]: 1.0
* [Website]: http://www.qxmcu.com/
* [Taobao Store]: http://qxmcu.taobao.com/ (Direct Store) http://qx-mcu.taobao.com/ (Head Office)
* [Experimental platform]: QX-MINI51 microcontroller development board
* [External crystal oscillator]: 11.0592mhz
* [Main control chip]: STC89C52
* [Compilation Environment]: Keil Î¼Visio3
* [Program function]: HC-SR04 ultrasonic ranging module DEMO program
* [Instructions for use]: see below
************************************************** ******************************** /

/ ************************************************* ************************************************** ******** /
// HC-SR04 DEMO program of ultrasonic ranging module
// Crystal: 11.0592
// Wiring: Module TRIG connected to P1.2 ECH0 connected to P1.1
// Serial baud rate 9600
/ ************************************************* ************************************************** ******** /
        #include <AT89X51.H>
        #include <intrins.h>
    #include <STDIO.H>

    #define uchar unsigned char
    #define uint unsigned int
        #define RX P1_1
    #define TX P1_2
  

        unsigned int time = 0;
        unsigned int timer = 0;
        float S = 0;
    bit flag = 0;


/ ************************************************* ******* /
    void Conut (void)
        {
         time = TH0 * 256 + TL0;
         TH0 = 0;
         TL0 = 0;
         S = (time * 1.87) / 100; // Calculated as CM
         if (flag == 1) // Exceed measurement
         {
          flag = 0;
          printf ("----- \ n");
         }

          printf ("S =% f \ n", S);
        }
/ ************************************************* ******* /
void delayms (unsigned int ms)
{
        unsigned char i = 100, j;
        for (; ms; ms--)
        {
                while (-i)
                {
                        j = 10;
                        while (-j);
                }
        }
}
/ ************************************************* ******* /
     void zd0 () interrupt 1 // T0 interrupt is used for counter overflow, exceeding the ranging range
  {
    flag = 1; // Interrupt overflow flag
  }
/ ************************************************* ******* /
   void StartModule () // T1 interrupt is used to scan the digital tube and meter 800MS start module
  {
          TX = 1; // 800MS starts the module once
          _nop_ ();
          _nop_ ();
          _nop_ ();
          _nop_ ();
          _nop_ ();
          _nop_ ();
          _nop_ ();
          _nop_ ();
          _nop_ ();
          _nop_ ();
          _nop_ ();
          _nop_ ();
          _nop_ ();
          _nop_ ();
          _nop_ ();
          _nop_ ();
          _nop_ ();
          _nop_ ();
          _nop_ ();
          _nop_ ();
          _nop_ ();
          TX = 0;
  }
/ ************************************************* ******* /
void main (void)
{
    TMOD = 0x21; // Set T0 to mode 1, GATE = 1;
        SCON = 0x50;
        TH1 = 0xFD;
        TL1 = 0xFD;
        TH0 = 0;
        TL0 = 0;
        TR0 = 1;
        ET0 = 1; // Allow T0 interrupt
        TR1 = 1; // Turn on the timer
        TI = 1;

        EA = 1; // Turn on the total interrupt


        while (1)
        {
         StartModule ();
         while (! RX); // Wait when RX is zero
         TR0 = 1; // Turn on counting
         while (RX); // When RX is 1, count and wait
         TR0 = 0; // Turn off counting
     Conut (); // Calculate
         delayms (100); // 100MS

        }

}
