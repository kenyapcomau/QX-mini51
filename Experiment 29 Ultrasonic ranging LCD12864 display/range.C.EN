/ ************************************************* ********************************
* [Writing time]: March 5, 2014
* [Author]: Qingxiang Electronics: 03
* [Edition]: 1.0
* [Website]: http://www.qxmcu.com/
* [Taobao Store]: http://qxmcu.taobao.com/ (Direct Store) http://qx-mcu.taobao.com/ (Head Office)
* [Experimental platform]: QX-MINI51 microcontroller development board
* [External crystal oscillator]: 11.0592mhz
* [Main control chip]: STC89C52
* [Compilation Environment]: Keil μVisio3
* [Program function]: LCD12864 (St7920 / St7921) + ultrasonic distance measuring module + STC89C52
* 【Instructions for use】: 

/ * Wiring: Module TRIG is connected to P1.2 ECH0 to P1.1 * /
/ * RS (CS) connect P0.7; * /
/ * RW (SID) connect P0.6; * /
/ * E (SCLK) connect P0.5; * /
/ * PSB connected to GND serial mode
************************************************** ******************************** /

    #include <AT89X51.H>
        #include <intrins.h>
// pin definition
    sbit RX = P1 ^ 1;
    sbit TX = P1 ^ 2;
    sbit CS = P0 ^ 7; // Chip selection High level effective Single chip LCD can be fixed high level when used
    sbit SID = P0 ^ 6; // Data
    sbit SCLK = P0 ^ 5; // clock
        sbit PSB = P0 ^ 4; // PSB

// Function Definition function declaration
void Delay (int num);
void Init_DS18B20 (void);
unsigned char ReadOneChar (void);
void WriteOneChar (unsigned char dat);
unsigned int ReadTemperature (void);
void clock_out (unsigned char dd);
unsigned char clock_in (void);
unsigned char read_clock (unsigned char ord);
void write_clock (unsigned char ord, unsigned char dd);
void Disp (void);
void id_case1_key (void);
void id_case2_key (void);
void Set_time (unsigned char sel, bit sel_1);
void Timer0_Init (void);
void Init_1302 (void);
void Set_Bell (unsigned char sel, bit sel_1);
void Bell (void);
// 12864
void Write_char (bit start, unsigned char ddata);
void Send_byte (unsigned char bbyte);
void Delaynms (unsigned int di);
void Lcd_init (void);
void Disp_img (unsigned char * img);
void LCD_Write_string (unsigned char X, unsigned char Y, unsigned char * s);
void LCD_set_xy (unsigned char x, unsigned char y);
unsigned char code num [] = {"0123456789: .-"};
unsigned char code waves [] = {"Ultrasonic Ranging System"};
unsigned char code znwk [] = {"清 翔 电子 科技"};
unsigned char code CM [] = {"M"};
unsigned int time = 0;
         long S = 0;
         bit flag = 0;
unsigned char disbuff [4] = {0,0,0,0,};
unsigned char code logo [] = {
/ *-Transferred an image: logo.bmp-* /
/ *-Width x Height = 128x64 Welcome to use this product LOGO-* /
/ *-Loaded an image: C: \ Documents and Settings \ lwd \ Desktop \ New Folder \ X.bmp-* /
/ *-Width x height = 128x64-* /
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0xE0,0x00,0x00,0x0C,0x00,0x00,0x40,0x70,0x00,0x00,0x00,0x80,0x00,
0x00,0x00,0x00,0xE0,0x00,0x00,0x1E,0x00,0x00,0x60,0x70,0x00,0x00,0x0F,0xE0,0x00,
0x00,0x00,0x01,0xC0,0x00,0x60,0x3C,0x00,0x00,0xE0,0x60,0x00,0x1F,0xFF,0xE0,0x00,
0x00,0x00,0x03,0x80,0x00,0x70,0x70,0x40,0x00,0xE0,0x7E,0x00,0x1F,0xE0,0xC0,0x00,
0x00,0x00,0x03,0x00,0x00,0x73,0xC3,0xF0,0x01,0xC3,0xFC,0x00,0x38,0xE1,0xC0,0x00,
0x00,0x03,0xC6,0x3C,0x00,0x33,0x9F,0xF0,0x03,0x8F,0xC0,0x00,0x30,0xC1,0xC0,0x00,
0x00,0x3F,0xEF,0xFE,0x00,0x03,0x1C,0xE0,0x07,0x01,0xCC,0x00,0x31,0xF1,0x80,0x00,
0x00,0x79,0xDF,0xBC,0x00,0x06,0x18,0xC0,0x0E,0x01,0xFE,0x00,0x77,0xF9,0x80,0x00,
0x00,0x01,0xB0,0x30,0x01,0xC6,0x19,0xC0,0x1E,0x7F,0xDE,0x00,0x6F,0x83,0x80,0x00,
0x00,0x23,0xAC,0x60,0x0F,0xE6,0xF1,0x80,0x3E,0x7B,0x38,0x00,0x61,0x83,0x00,0x00,
0x00,0x37,0x0E,0x00,0x0F,0xC7,0xB7,0x80,0xEC,0x63,0x30,0x00,0xE3,0x03,0x00,0x00,
0x00,0x3E,0x0E,0x00,0x01,0x8F,0x37,0x01,0xCC,0x6F,0xF0,0x00,0xC7,0xF7,0x00,0x00,
0x00,0x1E,0x0C,0x00,0x03,0x1E,0x66,0x03,0x0C,0x7F,0x00,0x01,0xFF,0xE6,0x00,0x00,
0x00,0x1E,0x1C,0x00,0x03,0x1C,0x60,0x02,0x19,0xAC,0x00,0x01,0x96,0x06,0x00,0x00,
0x00,0x3E,0x3E,0x00,0x03,0x18,0x60,0x00,0x19,0xFC,0x00,0x03,0x86,0x0E,0x00,0x00,
0x00,0x7E,0x36,0x00,0x03,0x00,0xC0,0x00,0x38,0x78,0x00,0x03,0x06,0x0C,0x00,0x00,
0x00,0xE6,0x67,0x00,0x03,0x00,0xC0,0x00,0x30,0x78,0x00,0x06,0x0C,0x0C,0x00,0x00,
0x01,0xC6,0xC3,0x80,0x7F,0xF0,0xC0,0x00,0x30,0xFE,0x00,0x0E,0x0C,0x1C,0x00,0x00,
0x03,0x81,0x83,0xC0,0x78,0xFF,0x80,0x00,0x61,0xCF,0x80,0x1C,0x08,0x18,0x00,0x00,
0x06,0x07,0x03,0xE0,0x00,0x1F,0xFF,0xE0,0x67,0x07,0xE0,0x38,0x18,0xF8,0x00,0x00,
0x08,0x0E,0x01,0xF8,0x00,0x07,0xFF,0x80,0xCE,0x03,0xF8,0x60,0x00,0x70,0x00,0x00,
0x00,0x18,0x01,0xF8,0x00,0x01,0xFC,0x00,0xC0,0x01,0xFC,0xC0,0x00,0x70,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x06,0x00,0x00,0x00,0x1C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x07,0x00,0x00,0x00,0x1C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x06,0x00,0x00,0x00,0x0C,0xE0,0x00,0x01,0xE0,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x0E,0x00,0x00,0x00,0x3F,0xE0,0x00,0xFF,0xF0,0x00,0x38,0x00,0xE0,0x00,
0x00,0x00,0x0C,0x00,0x00,0x0F,0xFF,0x80,0x00,0xF8,0xF0,0x00,0x38,0x00,0xE0,0x00,
0x00,0x00,0x0C,0xF0,0x00,0x0F,0xC7,0x00,0x00,0x60,0xE0,0x00,0x38,0x00,0xE0,0x00,
0x00,0x00,0x1F,0xF0,0x00,0x01,0x8E,0x00,0x00,0x60,0xC0,0x00,0x70,0x01,0xC0,0x00,
0x00,0x07,0xFF,0x80,0x00,0x01,0x8C,0x00,0x00,0xE1,0x80,0x00,0x70,0x01,0xC0,0x00,
0x00,0x07,0xF8,0x00,0x00,0x01,0x98,0x00,0x00,0xDF,0xC0,0x00,0x70,0x01,0xC0,0x00,
0x00,0x00,0x78,0x00,0x00,0x01,0xBF,0xE0,0x00,0xFF,0x00,0x00,0x60,0x01,0x80,0x00,
0x00,0x00,0xFC,0x00,0x00,0x7F,0xFF,0xE0,0x00,0xC0,0x00,0x00,0xE0,0x03,0x80,0x00,
0x00,0x01,0xFE,0x00,0x00,0x7F,0xF8,0x00,0x00,0x00,0x00,0x00,0xC0,0x03,0x00,0x00,
0x00,0x03,0xB7,0x00,0x00,0x60,0x00,0x00,0x00,0x00,0x3C,0x00,0xC0,0x03,0x00,0x00,
0x00,0x07,0x67,0x00,0x00,0x60,0x00,0x00,0x03,0x9F,0xFE,0x00,0x80,0x02,0x00,0x00,
0x00,0x0E,0x63,0x80,0x00,0xE0,0x00,0x01,0xFF,0xCF,0x1E,0x01,0x80,0x06,0x00,0x00,
0x00,0x1C,0xE1,0xE0,0x00,0xC0,0x00,0x00,0xE3,0x9C,0x38,0x01,0x80,0x06,0x00,0x00,
0x00,0x38,0xC1,0xF8,0x01,0xC0,0x00,0x00,0xC3,0x18,0x30,0x00,0x00,0x00,0x00,0x00,
0x00,0xE0,0xFC,0xFE,0x03,0x80,0x00,0x01,0xC7,0x18,0x60,0x00,0x00,0x00,0x00,0x00,
0x01,0xDF,0xF8,0xFE,0x03,0x00,0x00,0x01,0x8E,0x1B,0xE0,0x07,0x00,0x1C,0x00,0x00,
0x07,0x07,0x80,0x00,0x07,0x00,0x00,0x01,0xFF,0x3F,0xE0,0x07,0x00,0x1C,0x00,0x00,
0x0C,0x03,0x80,0x00,0x0E,0x00,0x00,0x01,0xF0,0x38,0x00,0x0F,0x00,0x3C,0x00,0x00,
0x00,0x03,0x00,0x00,0x1C,0x00,0x00,0x01,0x00,0x20,0x00,0x06,0x00,0x18,0x00,0x00,
0x00,0x03,0x00,0x00,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x03,0x00,0x00,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x02,0x00,0x01,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};

/ ************************************************* ***************************** /
void Lcd_init (void) // Initialize LCD
{
        PSB = 0;
        Delaynms (10); // Start waiting, wait for LCM to speak into working state
        CS = 1;
        Write_char (0,0x30); // 8-bit interface, basic instruction set
        Write_char (0,0x0c); // Display on, cursor off, reverse white
        Write_char (0,0x01); // Clear the screen, reset the address counter of DDRAM to zero
}

/ ************************************************* ***************************** /
void Write_char (bit start, unsigned char ddata) // Write instruction or data
{
        unsigned char start_data, Hdata, Ldata;
        if (start == 0)
                start_data = 0xf8; // write instruction
    else
        start_data = 0xfa; // write data
  
        Hdata = ddata & 0xf0; // take the upper four bits
        Ldata = (ddata << 4) & 0xf0; // take the lower four bits
        Send_byte (start_data); // Send start signal
        Delaynms (5); // Delay is necessary
        Send_byte (Hdata); // Send the upper four bits
        Delaynms (1); // Delay is necessary
        Send_byte (Ldata); // Send the lower four bits
        Delaynms (1); // Delay is necessary
}

/ ************************************************* ***************************** /
void Send_byte (unsigned char bbyte) // Send a byte
{
        unsigned char i;
        for (i = 0; i <8; i ++)
        {
                SID = bbyte & 0x80; // Remove the highest bit
                SCLK = 1;
                SCLK = 0;
                bbyte << = 1; // shift left
        }
}

/ ************************************************* ***************************** /
void Delaynms (unsigned int di) // Delay
{
        unsigned int da, db;
        for (da = 0; da <di; da ++)
                for (db = 0; db <10; db ++);
}

/ ************************************************* ***************************** /
void Disp_img (unsigned char * img) // Graphic mode 12864 display font 221 Take film horizontally
{
        unsigned char i, j;
        unsigned int k = 0;

        Write_char (0,0x36); // Graphic mode
        for (i = 0; i <32; i ++)
        {
                Write_char (0,0x80 + i);
                Write_char (0,0x80);
        for (j = 0; j <16; j ++)
                {
                        Write_char (1, img [k ++]);
                }
        }

        for (i = 0; i <32; i ++)
        {
                Write_char (0,0x80 + i);
                Write_char (0,0x88);
        for (j = 0; j <16; j ++)
                {
                        Write_char (1, img [k ++]);
                }
        }
}

/ ************************************************* ***************************** /
void Clr_Scr (void) // Clear screen function
{
        Write_char (0,0x01);
}

/ ************************************************* ***************************** /
void LCD_set_xy (unsigned char x, unsigned char y)
{// Set the starting position of LCD display, X is row, Y is column
    unsigned char address;
        switch (x)
        {
                case 0: address = 0x80 + y; break;
        case 1: address = 0x80 + y; break;
                case 2: address = 0x90 + y; break;
                case 3: address = 0x88 + y; break;
                case 4: address = 0x98 + y; break;
                default: address = 0x80 + y; break;
        }
    Write_char (0, address);
}

/ ************************************************* ***************************** /
void LCD_Write_string (unsigned char X, unsigned char Y, unsigned char * s)
{// Chinese and English string display function
        LCD_set_xy (X, Y);
    
    while (* s)
    {
                Write_char (1, * s);
            s ++;
                Delaynms (1);
        }
}

/ ************************************************* ***************************** /
void LCD_Write_number (unsigned char s) // digital display function
{
        Write_char (1, num [s]);
        Delaynms (1);
}
/ ************************************************* ***************************** /
void Lcd_Mark2 (void)
{
        Clr_Scr (); // Clear the screen
        LCD_Write_string (1,0, znwk); //
        LCD_Write_string (2,0, waves); //
        LCD_Write_string (3,7, CM); //
}

/ ************************************************* ******* /
    void Conut (void)
        {
           time = TH0 * 256 + TL0;
           TH0 = 0;
           TL0 = 0;
           S = time * 1.87 / 100; // Calculated is CM 11.0592M crystal
           if (flag == 1) // Exceed measurement
          {
           flag = 0;
           LCD_set_xy (3, 4);
           LCD_Write_number (13);
           LCD_Write_number (12);
           LCD_set_xy (3, 5);
           LCD_Write_number (13);
           LCD_Write_number (13);
          
           }
         else
          {
           disbuff [1] = S% 1000/100;
           disbuff [2] = S% 1000% 100/10;
           disbuff [3] = S% 1000% 10% 10;
           LCD_set_xy (3, 4);
           LCD_Write_number (disbuff [1]);
           LCD_Write_number (12);
           LCD_set_xy (3, 5);
           LCD_Write_number (disbuff [2]);
           LCD_Write_number (disbuff [3]);
          }
        }
/ ************************************************* ******* /
void delayms (unsigned int ms)
{
        unsigned char i = 100, j;
        for (; ms; ms--)
        {
                while (-i)
                {
                        j = 10;
                        while (-j);
                }
        }
}
/ ************************************************* ******* /
void zd0 () interrupt 1 // T0 interrupt is used for counter overflow, exceeding the ranging range
  {
    flag = 1; // Interrupt overflow flag
  }
/ ************************************************* ******* /
   void StartModule () // T1 interrupt is used to scan the digital tube and meter 800MS start module
  {
          TX = 1; // 800MS starts the module once
          _nop_ ();
          _nop_ ();
          _nop_ ();
          _nop_ ();
          _nop_ ();
          _nop_ ();
          _nop_ ();
          _nop_ ();
          _nop_ ();
          _nop_ ();
          _nop_ ();
          _nop_ ();
          _nop_ ();
          _nop_ ();
          _nop_ ();
          _nop_ ();
          _nop_ ();
          _nop_ ();
          _nop_ ();
          _nop_ ();
          _nop_ ();
          TX = 0;
  }
/ ************************************************* ******* /
void main (void)
{
    TMOD = 0x01; // Set T0 to mode 1, GATE = 1
        TH0 = 0;
        TL0 = 0;
        TR0 = 1;

        Lcd_init (); // Set up LCD display
        Clr_Scr (); // Clear screen
        Disp_img (logo); // Show welcome to use this product LOGO
        Delaynms (10000);
        Lcd_init (); // Return from the graphic display state
    Lcd_Mark2 ();


        while (1)
        {
         StartModule ();
                                        // Calculate
         while (! RX); // Wait when RX is zero
         TR0 = 1; // Turn on counting
         while (RX); // When RX is 1, count and wait
         TR0 = 0; // Turn off counting
         Conut ();
         delayms (80); // 80MS

        }

}
